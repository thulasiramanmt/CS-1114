#BlueJ class context
comment0.target=StudentBoardTest
comment0.text=\r\n\ \ Tests\ the\ board\ interface.\r\n\ \ Summarize\ what\ your\ test\ objectives\ are.\r\n\r\n\ \ @author\ thulasiramanmt\r\n\ \ @version\ 2023.11.07\r\n
comment1.params=
comment1.target=StudentBoardTest()
comment1.text=\r\n\ Creates\ a\ new\ StudentBoardTest\ test\ object.\r\n
comment10.params=
comment10.target=void\ testPlaceNotOutOfBounds()
comment10.text=\r\n\ Test\ placing\ a\ piece\ within\ bounds.\r\n
comment11.params=
comment11.target=void\ testPlaceBadOccupied()
comment11.text=\r\n\ Test\ placing\ a\ piece\ where\ \r\n\ another\ block\ is\ already\ present.\r\n
comment12.params=
comment12.target=void\ testPlaceNotBadOccupied()
comment12.text=\r\n\ Test\ placing\ a\ piece\ where\ no\ block\ is\ present.\r\n
comment13.params=
comment13.target=void\ testPlaceColumnHeight()
comment13.text=\r\n\ Test\ the\ column\ heights\ after\ placing\ a\ piece.\r\n
comment14.params=
comment14.target=void\ testPlaceRowFilled()
comment14.text=\r\n\ \ Test\ placing\ a\ piece\ without\ filling\ a\ row.\r\n
comment15.params=
comment15.target=void\ testPlaceNotRowFilled()
comment15.text=\r\n\ Test\ placing\ a\ piece\ that\ results\ in\ filling\ a\ row.\r\n
comment16.params=
comment16.target=void\ testClearRowsNotmet()
comment16.text=\r\n\ Test\ clearing\ rows\ that\ do\ not\ meet\ the\ criteria.\r\n
comment17.params=
comment17.target=void\ testPlaceOk()
comment17.text=\r\n\ Test\ placing\ a\ piece\ with\ no\ issues.\r\n
comment18.params=
comment18.target=void\ testClearRowsNo()
comment18.text=\r\n\ Test\ attempting\ to\ clear\ rows\ on\ an\ empty\ board.\r\n
comment19.params=
comment19.target=void\ testPlaceOutBoundsXOverWidth()
comment19.text=\r\n\ Test\ placing\ a\ piece\ with\ xDs\ >\=\ width.\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testNotPlaceOutBoundYOverHeight()
comment20.text=\r\n\ Test\ placing\ a\ piece\ with\ yDs\ >\=\ height.\r\n
comment21.params=
comment21.target=void\ testPlaceOutBoundsXNegative()
comment21.text=\r\n\ Test\ placing\ a\ piece\ with\ xDs\ <\ 0.\r\n
comment22.params=
comment22.target=void\ testPlaceOutBoundsYNegative()
comment22.text=\r\n\ Test\ placing\ a\ piece\ with\ yDs\ <\ 0.\r\n
comment3.params=
comment3.target=void\ testLonRow0()
comment3.text=\r\n\ Test\ the\ placement\ of\ an\ L-shaped\ piece\ in\ the\ top\ row.\r\n
comment4.params=
comment4.target=void\ testLonRow1()
comment4.text=\r\n\ Test\ the\ placement\ of\ an\ L-shaped\ piece\ in\ the\ second\ row.\r\n
comment5.params=
comment5.target=void\ testPlaceValid()
comment5.text=\r\n\ Test\ placing\ a\ valid\ piece\ in\ an\ empty\ board.\r\n
comment6.params=
comment6.target=void\ testGetBlocksInAllRows()
comment6.text=\r\n\ Test\ getting\ the\ number\ of\ blocks\ in\ all\ rows.\r\n
comment7.params=
comment7.target=void\ testHasBlockAt()
comment7.text=\r\n\ Test\ checking\ if\ a\ block\ exists\ at\ a\ specific\ point.\r\n
comment8.params=
comment8.target=void\ testClearRows()
comment8.text=\r\n\ Test\ clearing\ filled\ rows.\r\n
comment9.params=
comment9.target=void\ testPlaceOutOfBound()
comment9.text=\r\n\ Test\ placing\ a\ piece\ out\ of\ bounds.\r\n
numComments=23
