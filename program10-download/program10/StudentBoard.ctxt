#BlueJ class context
comment0.target=StudentBoard
comment0.text=\r\n\ \ This\ class\ provides\ a\ common\ set\ of\ features\r\n\ \ for\ the\ Board\ interface\r\n\ \ Follow\ it\ with\ additional\ details\ about\ its\ purpose,\ what\ abstraction\r\n\ \ it\ represents,\ and\ how\ to\ use\ it.\r\n\r\n\ \ @author\ thulasiramanmt\r\n\ \ @version\ 2023.11.07\r\n
comment1.params=width\ height
comment1.target=StudentBoard(int,\ int)
comment1.text=\r\n\ Initializes\ a\ newly\ created\ StudentBoard\ object.\r\n\ \r\n\ @param\ width\ The\ number\ of\ width\r\n\ @param\ height\ The\ number\ of\ height\r\n
comment2.params=
comment2.target=int\ getWidth()
comment2.text=\r\n\ Gets\ Width\r\n\ \r\n\ @return\ width\r\n
comment3.params=
comment3.target=int\ getHeight()
comment3.text=\r\n\ gets\ height\r\n\ \r\n\ @return\ height\r\n
comment4.params=
comment4.target=int[]\ getColumnHeights()
comment4.text=\r\n\ gets\ column\ height\r\n\ \r\n\ @return\ columnHeights\r\n
comment5.params=
comment5.target=int[]\ getBlocksInAllRows()
comment5.text=\r\n\ get\ rows\ width\r\n\ \r\n\ @return\ An\ array\ representing\ the\ number\ of\ blocks\ filled\ in\ each\ row.\r\n
comment6.params=point
comment6.target=boolean\ hasBlockAt(student.tetris2.Point)
comment6.text=\r\n\ Attempts\ to\ add\ the\ body\ of\ a\ piece\ to\ the\ board.\r\n\ Copies\ the\ piece\ blocks\ into\ the\ board\ grid.\r\n\ Returns\ PLACE_OK\ for\ a\ regular\ placement,\ or\ PLACE_ROW_FILLED\r\n\ for\ a\ regular\ placement\ that\ causes\ at\ least\ one\ row\ to\ be\ filled.\r\n\ \r\n\ @param\ point\ The\ location\ to\ check.\r\n\ @return\ True\ if\ there\ is\ a\ block\ at\ the\ specified\ (x,\ y)\ position.\r\n
comment7.params=piece\ location
comment7.target=int\ place(student.tetris2.Piece,\ student.tetris2.Point)
comment7.text=\r\n\ Attempts\ to\ add\ the\ body\ of\ a\ piece\ to\ the\ board.\r\n\ Copies\ the\ piece\ blocks\ into\ the\ board\ grid.\r\n\ Returns\ PLACE_OK\ for\ a\ regular\ placement,\ or\ PLACE_ROW_FILLED\r\n\ for\ a\ regular\ placement\ that\ causes\ at\ least\ one\ row\ to\ be\ filled.\r\n\ \r\n\ @param\ piece\ the\ peice\ to\ place\r\n\ @param\ location\ the\ location\ to\ place\r\n\ @return\ The\ result\ of\ the\ placement\ attempt.\ Possible\ return\ values\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Board.PLACE_OK\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Board.PLACE_OUT_BOUNDS\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Board.PLACE_BAD\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Board.PLACE_ROW_FILLED\r\n
comment8.params=
comment8.target=boolean\ clearRows()
comment8.text=\r\n\ Clear\ Rows\r\n\ @return\ true\ if\ any\ rows\ were\ cleared,\ false\ otherwise.\r\n
comment9.params=
comment9.target=boolean[][]\ getGrid()
comment9.text=\r\n\ Gets\ grids\r\n\ \r\n\ @return\ grid\r\n
numComments=10
